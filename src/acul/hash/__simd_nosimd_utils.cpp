/* Generated by https://github.com/corsix/fast-crc32/ using: */
/* E:\Documents\programming\crc32\fast-crc32\generate.exe -i avx2 -p crc32c -a v4s2 */
/* MIT licensed */

#include <acul/api.hpp>
#include <array>
#include <cstdint>
#include <stddef.h>

constexpr std::array<uint32_t, 256> generate_crc32_table()
{
    std::array<uint32_t, 256> table{};
    for (uint32_t i = 0; i < 256; ++i)
    {
        uint32_t crc = i;
        for (uint32_t j = 0; j < 8; ++j)
        {
            if (crc & 1)
                crc = (crc >> 1) ^ 0xEDB88320;
            else
                crc >>= 1;
        }
        table[i] = crc;
    }
    return table;
}

constexpr auto crc32_table = generate_crc32_table();

namespace acul
{

    APPLIB_API uint32_t crc32(uint32_t crc0, const char *buf, size_t len)
    {
        uint32_t crc = ~crc0;

        for (size_t i = 0; i < len; ++i)
        {
            uint8_t byte = static_cast<uint8_t>(buf[i]);
            crc = (crc >> 8) ^ crc32_table[(crc ^ byte) & 0xFF];
        }
        return ~crc;
    }
} // namespace acul